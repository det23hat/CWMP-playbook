  # - name: 取得資訊
  #   set_fact: 
  #     deploy_info: "{{ deploy_info + new_du_item.info}}"
  # - name: 部署之DU資訊
  #   community.docker.docker_container:
  #     name: "{{ inventory_hostname }}"
  #     image: '{{ item.image_ver }}'
  #     auto_remove: yes
  #     detach: yes
  #     interactive: no
  #     privileged: no
  #     tty: no
  #   loop: "{{ new_du_item.c_info }}"

  # - name: 部署之DU資訊
  #   community.docker.docker_container:
  #     name: "{{ inventory_hostname }}"
  #     image: '{{ new_du_item.image_ver }}'
  #     auto_remove: yes
  #     detach: yes
  #     interactive: no
  #     privileged: no
  #     tty: no

  # - name: 項目處理
  #   block:
  #     - name: 找到項目
  #       set_fact:
  #         has_find: 1
  #     - name: 執行項目
  #       debug:
  #         msg: "{{ item }}"
  #       loop: "{{ new_du_item.info }}"
  #     - name: 移除項目
  #       set_fact:
  #         du_need_deployed_info: "{{ tmp_du_list | difference(new_du_item)}}"  
  #   when: new_du_item.cpe == inventory_hostname
  
  
  - name: 運行新版本 container
    community.docker.docker_container:
      name: "{{ new_du_item.container_name | trim('/') }}"
      image: '{{ new_du_item.image_ver }}'
      auto_remove: yes
      detach: yes
      interactive: no
      privileged: no
      tty: no
      ports: '{{ new_du_item.ports }}'
      volumes: '{{ new_du_item.volumes }}'
    when: 
      - new_du_item.ports != []
      - new_du_item.volumes != []

  - name: 運行新版本 container
    community.docker.docker_container:
      name: "{{ new_du_item.container_name | trim('/') }}"
      image: '{{ new_du_item.image_ver }}'
      auto_remove: yes
      detach: yes
      interactive: no
      privileged: no
      tty: no
      ports: '{{ new_du_item.ports }}'
    when: 
      - new_du_item.ports != []
      - new_du_item.volumes == []

  - name: 運行新版本 container
    community.docker.docker_container:
      name: "{{ new_du_item.container_name | trim('/') }}"
      image: '{{ new_du_item.image_ver }}'
      auto_remove: yes
      detach: yes
      interactive: no
      privileged: no
      tty: no
      volumes: '{{ new_du_item.volumes }}'
    when: 
      - new_du_item.ports == []
      - new_du_item.volumes != []

  - name: 運行新版本 container
    community.docker.docker_container:
      name: "{{ new_du_item.container_name | trim('/') }}"
      image: '{{ new_du_item.image_ver }}'
      auto_remove: yes
      detach: yes
      interactive: no
      privileged: no
      tty: no
    when: 
      - new_du_item.ports == []
      - new_du_item.volumes == []